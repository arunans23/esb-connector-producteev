<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~   WSO2 Inc. licenses this file to you under the Apache License,
  ~   Version 2.0 (the "License"); you may not use this file except
  ~   in compliance with the License.
  ~   You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing,
  ~  software distributed under the License is distributed on an
  ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~  KIND, either express or implied.  See the License for the
  ~  specific language governing permissions and limitations
  ~  under the License.
  -->
<proxy xmlns="http://ws.apache.org/ns/synapse" name="producteev" transports="https,http" statistics="disable"
   trace="disable" startOnLoad="true">
   <target>
      <inSequence>
         <property name="apiUrl" expression="json-eval($.apiUrl)" />
         <property name="projectId" expression="json-eval($.projectId)" />
         <property name="accessToken" expression="json-eval($.accessToken)" />
         <property name="title" expression="json-eval($.title)" />
         <property name="endDate" expression="json-eval($.endDate)" />
         <property name="endDateTimeZone" expression="json-eval($.endDateTimeZone)" />
         <property name="message" expression="json-eval($.message)" />
         <property name="taskId" expression="json-eval($.taskId)" />
         <property name="files" expression="json-eval($.files)" />
         <property name="noteId" expression="json-eval($.noteId)" />
         <property name="userId" expression="json-eval($.userId)" />
         <property name="type" expression="json-eval($.type)" />
         <property name="email" expression="json-eval($.email)" />
         <property name="networkId" expression="json-eval($.networkId)" />
         <property name="sort" expression="json-eval($.sort)" />
         <property name="order" expression="json-eval($.order)" />
         <property name="alias" expression="json-eval($.alias)" />
         <property name="page" expression="json-eval($.page)" />
         <property name="statusesCriteria" expression="json-eval($.statusesCriteria)" />
         <property name="prioritiesCriteria" expression="json-eval($.prioritiesCriteria)" />
         <property name="status" expression="json-eval($.status)" />
         <property name="priority" expression="json-eval($.priority)" />
         <property name="labelId" expression="json-eval($.labelId)" />
         <property name="backgroundColor" expression="json-eval($.backgroundColor)" />
         <property name="foregroundColor" expression="json-eval($.foregroundColor)" />
         <producteev.init>
            <apiUrl>{$ctx:apiUrl}</apiUrl>
            <accessToken>{$ctx:accessToken}</accessToken>
         </producteev.init>
         <switch source="get-property('transport','Action')">
            <case regex="urn:createTask">
               <producteev.createTask>
                  <projectId>{$ctx:projectId}</projectId>
                  <title>{$ctx:title}</title>
                  <endDate>{$ctx:endDate}</endDate>
                  <endDateTimeZone>{$ctx:endDateTimeZone}</endDateTimeZone>
               </producteev.createTask>
            </case>
            <case regex="urn:createNote">
               <producteev.createNote>
                  <message>{$ctx:message}</message>
                  <taskId>{$ctx:taskId}</taskId>
                  <files>{$ctx:files}</files>
               </producteev.createNote>
            </case>
            <case regex="urn:getNote">
               <producteev.getNote>
                  <noteId>{$ctx:noteId}</noteId>
               </producteev.getNote>
            </case>
            <case regex="urn:listTaskNotes">
               <producteev.listTaskNotes>
                  <taskId>{$ctx:taskId}</taskId>
               </producteev.listTaskNotes>
            </case>
            <case regex="urn:assignTask">
               <producteev.assignTask>
                  <taskId>{$ctx:taskId}</taskId>
                  <userId>{$ctx:userId}</userId>
               </producteev.assignTask>
            </case>
            <case regex="urn:removeAssignee">
               <producteev.removeAssignee>
                  <taskId>{$ctx:taskId}</taskId>
                  <userId>{$ctx:userId}</userId>
               </producteev.removeAssignee>
            </case>
            <case regex="urn:getUser">
               <producteev.getUser>
                  <userId>{$ctx:userId}</userId>
               </producteev.getUser>
            </case>
            <case regex="urn:inviteUserToNetwork">
               <producteev.inviteUserToNetwork>
                  <type>{$ctx:type}</type>
                  <email>{$ctx:email}</email>
                  <networkId>{$ctx:networkId}</networkId>
                  <userId>{$ctx:userId}</userId>
               </producteev.inviteUserToNetwork>
            </case>
            <case regex="urn:getTask">
               <producteev.getTask>
                  <taskId>{$ctx:taskId}</taskId>
               </producteev.getTask>
            </case>
            <case regex="urn:listTasks">
               <producteev.listTasks>
                  <sort>{$ctx:sort}</sort>
                  <order>{$ctx:order}</order>
                  <alias>{$ctx:alias}</alias>
                  <page>{$ctx:page}</page>
                  <statusesCriteria>{$ctx:statusesCriteria}</statusesCriteria>
                  <prioritiesCriteria>{$ctx:prioritiesCriteria}</prioritiesCriteria>
               </producteev.listTasks>
            </case>
            <case regex="urn:updateTask">
               <producteev.updateTask>
                  <taskId>{$ctx:taskId}</taskId>
                  <title>{$ctx:title}</title>
                  <status>{$ctx:status}</status>
                  <priority>{$ctx:priority}</priority>
                  <endDateTimeZone>{$ctx:endDateTimeZone}</endDateTimeZone>
                  <endDate>{$ctx:endDate}</endDate>
                  <projectId>{$ctx:projectId}</projectId>
               </producteev.updateTask>
            </case>
            <case regex="urn:addLabelToTask">
               <producteev.addLabelToTask>
                  <taskId>{$ctx:taskId}</taskId>
                  <labelId>{$ctx:labelId}</labelId>
               </producteev.addLabelToTask>
            </case>
            <case regex="urn:addFollowerToTask">
               <producteev.addFollowerToTask>
                  <taskId>{$ctx:taskId}</taskId>
                  <userId>{$ctx:userId}</userId>
               </producteev.addFollowerToTask>
            </case>
            <case regex="urn:updateLabel">
               <producteev.updateLabel>
                  <title>{$ctx:title}</title>
                  <backgroundColor>{$ctx:backgroundColor}</backgroundColor>
                  <foregroundColor>{$ctx:foregroundColor}</foregroundColor>
                  <labelId>{$ctx:labelId}</labelId>
               </producteev.updateLabel>
            </case>
            <case regex="urn:getAccessTokenFromRefreshToken">
               <producteev.getAccessTokenFromRefreshToken>
                  <apiUrl>{$ctx:apiUrl}</apiUrl>
               </producteev.getAccessTokenFromRefreshToken>
            </case>
         </switch>
         <respond />
      </inSequence>
      <outSequence>
         <log />
         <send />
      </outSequence>
   </target>
   <description />
</proxy>